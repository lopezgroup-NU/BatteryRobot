todo
bot should switch source vials if needed 
pyautogui on battery cycler
dispense specific concentration
setup db and flask gui

figure out how many cycles to get to electrodes // 
    15 pumps to first electrodes, 17 to second
    40 for start of liquid column to reach end, then 45 more pumps to pump all contents out
    fully assuming entire plumbing system is filled
    60 seconds for each viscous pump
we edited the bumps code to work with our demands. see dataanalysis.py// 
adjust height when aspirating (use marked vial) //
replace cartridges //
dispenseworkflowauto //
csv for dispense workflow auto //
    
get how many loops to move electrolyte // 28 loops of move_pump(0,2000)
screw capping // rob.cap(revs = 9.5, pitch = 0.8, torque_thresh=1850)

# June 5th 2024, syringe was moved to different position as it collided with clamps
# when moving down
# move carousel(x, 70) 70 is the max it can safely go down with syringe 
 for the electrolyte pumping,  reverse valves to pump out
 for i in range(35):
     print(i)
     c9.set_pump_valve(0,0) #(0,1) to pump out
     c9.delay(3)
     c9.move_pump(0,2000)
     c9.delay(3)
     c9.set_pump_valve(0,1) #(0,0) to pump out
     c9.delay(3)
     c9.move_pump(0, 0)
     c9.delay(3)
28 loops with move_pump(0,2000)

# move cap here and there for testing

# for i in range(15):
#     
#     if i == 3 or i == 4 or i == 5 or i == 10 or i == 11 or i == 17:
#         continue
#     
#     rob.goto_safe(rack_asp_official[i])
#     rob.close_gripper()
#     rob.uncap()
#     
#     if i % 2 == 0:
#         rob.goto_safe(cap_holder_1_approach)
#     else:
#         rob.goto_safe(cap_holder_2_approach)
#     rob.cap(torque_thresh=600)
#     rob.open_gripper()
#     
#     if i % 2 == 0:
#         rob.goto_safe(cap_holder_1)
#     else:
#         rob.goto_safe(cap_holder_2)
#     rob.close_gripper()
#     rob.uncap()
#     rob.goto_safe(rack_asp_official_approach[i])
#     rob.cap(torque_thresh=600)
#     rob.open_gripper()
